package lec3;

import java.util.Scanner;

public class mergeSort {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int arr[] = new int[n];
		
		for(int i = 0; i< arr.length; i++)
		{
			arr[i] = scn.nextInt();
		}
		sort(arr,0, arr.length - 1);
		int res[]= sort(arr, 0, arr.length-1);
		for(int val:res)
		{
			System.out.println(val+" ");
		}

	}
//	int means returning simple one value int it
//	int[] means returning array of the 
	public static int[] sort(int arr[] ,int lo, int hi)
	{
		if(lo == hi)
		{
			return new int[] {arr[lo]};
		}
		
		int mid = (lo+hi)/2;
		
		int left[] = sort(arr ,lo ,mid);
		int right[] = sort(arr, mid+1, hi );
		
		int res[] = merge(left , right);
		
		return res;
	}
	
	public static int[] merge(int left[], int right[])
	{
		int i = 0;
		int j = 0;
		int idx = 0;
		int res[] = new int[left.length + right.length];
		while(i<left.length && j < right.length)
		{
			if(left[i] > right[j])
			{
				res[idx ]= right[j];
				idx++;
				j++;
			}
			else {
				res[idx] = left[i];
				idx++;
				i++;
				
			}
		}
		while(i<left.length)
		{
			res[idx]= left[i];
			i++;
			idx++;
		}
		while(j<right.length)
		{
			res[idx]= right[j];
			j++;
			idx++;
		}
		return res;
	}
	
	

}
